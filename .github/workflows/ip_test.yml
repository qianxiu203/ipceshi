name: IP延迟测试

on:
  workflow_dispatch:
    inputs:
      countries:
        description: '目标国家列表（逗号分隔）'
        required: false
        default: 'US,CN,JP,HK,TW,SG,KR,GB,DE,FR,CA,AU'
        type: string
      counts:
        description: '每个国家的目标IP数量（逗号分隔）'
        required: false
        default: '20,20,20,20,20,20,20,20,20,20,20,20'
        type: string
      batch_size:
        description: '每批处理的IP数量'
        required: false
        default: '20'
        type: number
      max_ips:
        description: '最大IP数量限制（0表示无限制）'
        required: false
        default: '0'
        type: number
      concurrent:
        description: '并发测试数量'
        required: false
        default: '10'
        type: number
      ports:
        description: '测试端口（逗号分隔）'
        required: false
        default: '443'
        type: string

jobs:
  ip-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install aiohttp

    - name: 运行IP测试
      run: |
        # 添加调试信息
        echo "🔍 当前工作目录:"
        pwd
        echo ""
        echo "📁 运行前目录结构:"
        ls -la
        echo ""
        
        # 运行IP测试（不使用矩阵，直接运行单个批次）
        echo "🚀 开始IP测试..."
        python ip_tester.py \
          --countries "${{ github.event.inputs.countries }}" \
          --counts "${{ github.event.inputs.counts }}" \
          --batch-size ${{ github.event.inputs.batch_size }} \
          --batch-index 0 \
          --max-ips ${{ github.event.inputs.max_ips }} \
          --concurrent ${{ github.event.inputs.concurrent }} \
          --ports "${{ github.event.inputs.ports }}" \
          --output ip_results
        
        # 检查是否创建了结果目录
        echo ""
        echo "📁 运行后目录结构:"
        ls -la
        echo ""
        echo "🔍 查找批次结果目录:"
        find . -name "*batch*" -type d | sort
        echo ""
        echo "🔍 详细检查ip_results_batch_0目录:"
        if [ -d "ip_results_batch_0" ]; then
            echo "✅ ip_results_batch_0目录存在"
            echo "📂 目录内容:"
            ls -la ip_results_batch_0/
            echo ""
            echo "📄 文件列表:"
            find ip_results_batch_0 -type f -name "*.txt" | head -20
        else
            echo "❌ ip_results_batch_0目录不存在"
            echo "🔍 查找所有可能的结果目录:"
            find . -type d -name "*result*" -o -name "*ip*" | sort
        fi

    - name: 上传测试结果
      uses: actions/upload-artifact@v4
      with:
        name: ip-results
        path: ip_results_batch_0
        retention-days: 7
      if: always()  # 即使测试失败也上传结果

    - name: 显示测试结果
      run: |
        echo "📊 测试结果汇总:"
        if [ -f "ip_results_batch_0/summary.txt" ]; then
          cat ip_results_batch_0/summary.txt
        else
          echo "未找到汇总文件"
        fi